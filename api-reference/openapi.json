{
  "openapi": "3.0.3",
  "info": {
    "title": "Clemta Formation API",
    "description": "API for company formation services. This API allows partners to create, retrieve, and manage company formations programmatically.",
    "version": "2025-06-24",
    "contact": {
      "name": "Clemta API Support",
      "email": "api-support@clemta.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://clemta.com/terms"
    }
  },
  "servers": [
    {
      "url": "https://api.clemta.com",
      "description": "Production server"
    },
    {
      "url": "https://sandbox.clemta.com",
      "description": "Sandbox server"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/formations": {
      "post": {
        "summary": "Create Company Formation",
        "description": "Creates a new company formation with the provided details. Requires multipart/form-data with company_data JSON and optional shareholder passport files.",
        "operationId": "createFormation",
        "tags": ["Formation"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["company_data"],
                "properties": {
                  "company_data": {
                    "type": "string",
                    "description": "JSON string containing company formation details",
                    "example": "{\"name\":\"Example Corp\",\"type\":\"LLC\",\"state\":\"DE\",\"ending\":\"LLC\",\"industry\":\"Technology\",\"address\":{\"address1\":\"123 Main St\",\"city\":\"Wilmington\",\"state\":\"DE\",\"zip\":\"19801\",\"country\":\"US\"},\"shareholders\":[{\"type\":\"individual\",\"first_name\":\"John\",\"last_name\":\"Doe\",\"number_of_shares\":100,\"email\":\"john@example.com\",\"phone\":\"+1234567890\",\"iso_code\":\"US\",\"title\":\"CEO\",\"address\":{\"address1\":\"123 Main St\",\"city\":\"Wilmington\",\"state\":\"DE\",\"zip\":\"19801\",\"country\":\"US\"},\"is_main_incorporator\":true,\"ssn\":\"123456789\"}],\"timezone\":\"America/New_York\",\"account_holder\":{\"first_name\":\"John\",\"last_name\":\"Doe\",\"email\":\"john@example.com\",\"phone\":\"+1234567890\"},\"package\":\"essential\"}"
                  },
                  "shareholder_passport_0": {
                    "type": "string",
                    "format": "binary",
                    "description": "Passport file for individual shareholder at index 0 (PDF, JPG, JPEG, PNG)"
                  }
                },
                "additionalProperties": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "binary",
                      "description": "Additional shareholder passport files (shareholder_passport_1, shareholder_passport_2, etc.)"
                    }
                  ]
                }
              },
              "encoding": {
                "company_data": {
                  "contentType": "application/json"
                },
                "shareholder_passport_0": {
                  "contentType": "application/pdf, image/jpeg, image/png"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Formation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "409": {
            "description": "Conflict - External ID already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "headers": {
              "Retry-After": {
                "description": "Number of seconds to wait before retrying",
                "schema": {
                  "type": "integer"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "Number of requests remaining in the current window",
                "schema": {
                  "type": "integer"
                }
              },
              "X-RateLimit-Reset": {
                "description": "Unix timestamp when the rate limit resets",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/formations/{id}": {
      "get": {
        "summary": "Get Formation Status",
        "description": "Retrieves the current status and details of a company formation. The ID can be either the company ID or the external ID provided during creation.",
        "operationId": "getFormation",
        "tags": ["Formation"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Company ID (ObjectID) or External ID",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "example": "64b8f1a2e4b0c8d9f0123456"
            }
          },
          {
            "name": "If-Modified-Since",
            "in": "header",
            "required": false,
            "description": "HTTP conditional request header for caching",
            "schema": {
              "type": "string",
              "format": "http-date",
              "example": "Wed, 21 Oct 2015 07:28:00 GMT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Formation details retrieved successfully",
            "headers": {
              "Last-Modified": {
                "description": "Last modification time of the formation",
                "schema": {
                  "type": "string",
                  "format": "http-date"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormationStatusResponse"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified - Formation has not been updated since the time specified in If-Modified-Since header"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access denied to this formation",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "404": {
            "description": "Formation not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "headers": {
              "Retry-After": {
                "description": "Number of seconds to wait before retrying",
                "schema": {
                  "type": "integer"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "Number of requests remaining in the current window",
                "schema": {
                  "type": "integer"
                }
              },
              "X-RateLimit-Reset": {
                "description": "Unix timestamp when the rate limit resets",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel Formation",
        "description": "Cancels a company formation. The ID can be either the company ID or the external ID provided during creation.",
        "operationId": "cancelFormation",
        "tags": ["Formation"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Company ID (ObjectID) or External ID",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "example": "64b8f1a2e4b0c8d9f0123456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Formation cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "404": {
            "description": "Formation not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FormationErrorResponse" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "Formation API key for authentication. Can also be provided as Bearer token in Authorization header."
      }
    },
    "schemas": {
      "FormationRequest": {
        "type": "object",
        "required": [
          "name",
          "type", 
          "state",
          "ending",
          "industry",
          "address",
          "shareholders",
          "timezone",
          "account_holder"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Company name",
            "example": "Example Corp"
          },
          "type": {
            "type": "string",
            "enum": ["LLC", "C-CORP"],
            "description": "Company type"
          },
          "state": {
            "type": "string",
            "enum": ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"],
            "description": "State abbreviation"
          },
          "ending": {
            "type": "string",
            "enum": ["LLC", "Inc.", "Corporation", "Corp."],
            "description": "Company ending"
          },
          "industry": {
            "type": "string",
            "description": "Industry type",
            "example": "Technology"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "shareholders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormationShareholderRequest"
            },
            "minItems": 1,
            "description": "List of shareholders"
          },
          "timezone": {
            "type": "string",
            "description": "Company timezone",
            "example": "America/New_York",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmera",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/La_Rioja",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Buenos_Aires",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Catamarca",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Coral_Harbour",
              "America/Cordoba",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Fort_Nelson",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Godthab",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Indianapolis",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Jujuy",
              "America/Juneau",
              "America/Kentucky/Monticello",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Louisville",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Mendoza",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Ojinaga",
              "America/Panama",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Calcutta",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Colombo",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Hebron",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Katmandu",
              "Asia/Khandyga",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Saigon",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faeroe",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Kirov",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Ulyanovsk",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zurich",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Enderbury",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Ponape",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Truk",
              "Pacific/Wake",
              "Pacific/Wallis"
            ]
          },
          "account_holder": {
            "$ref": "#/components/schemas/AccountHolder"
          },
          "package": {
            "type": "string",
            "enum": ["none", "essential"],
            "description": "Package option",
            "default": "none"
          },
          "external_id": {
            "type": "string",
            "description": "Partner's unique identifier for this company",
            "maxLength": 64
          },
          "custom_data": {
            "type": "object",
            "description": "Partner's custom data for this company",
            "additionalProperties": true
          },
          "number_of_shares": {
            "type": "number",
            "description": "Custom number of shares (if package allows)",
            "minimum": 1
          },
          "par_value": {
            "type": "number",
            "description": "Custom par value (if package allows)",
            "minimum": 0
          },
          "private": {
            "type": "boolean",
            "description": "Whether the company is private",
            "default": false
          },
          "ein": {
            "type": "string",
            "description": "Optional EIN for C-CORP companies",
            "pattern": "^\\d{2}-\\d{7}$"
          },
          "directors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormationPersonRequest"
            },
            "description": "Non-shareholder directors (C-CORP only)"
          },
          "officers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormationPersonRequest"
            },
            "description": "Non-shareholder officers (C-CORP only)"
          }
        }
      },
      "FormationShareholderRequest": {
        "type": "object",
        "required": [
          "type",
          "number_of_shares",
          "email",
          "phone",
          "iso_code",
          "title",
          "address"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["individual", "organization"],
            "description": "Shareholder type"
          },
          "number_of_shares": {
            "type": "number",
            "minimum": 1,
            "description": "Number of shares"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "iso_code": {
            "type": "string",
            "description": "Country ISO code"
          },
          "title": {
            "type": "string",
            "description": "Position/title"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "is_main_incorporator": {
            "type": "boolean",
            "description": "Whether this shareholder is the main incorporator",
            "default": false
          },
          "is_director": {
            "type": "boolean",
            "description": "Whether this shareholder is also a director (C-CORP only)"
          },
          "is_officer": {
            "type": "boolean",
            "description": "Whether this shareholder is also an officer (C-CORP only)"
          },
          "first_name": {
            "type": "string",
            "description": "First name (required for individual shareholders)"
          },
          "last_name": {
            "type": "string",
            "description": "Last name (required for individual shareholders)"
          },
          "ssn": {
            "type": "string",
            "description": "SSN (either SSN or ITIN required for individual shareholders)"
          },
          "itin": {
            "type": "string",
            "description": "ITIN (either SSN or ITIN required for individual shareholders)"
          },
          "legal_entity_name": {
            "type": "string",
            "description": "Legal entity name (required for organization shareholders)"
          },
          "representative_name": {
            "type": "string",
            "description": "Representative name (required for organization shareholders)"
          },
          "ein": {
            "type": "string",
            "description": "EIN (required for organization shareholders)"
          }
        }
      },
      "FormationPersonRequest": {
        "type": "object",
        "required": ["first_name", "last_name", "title"],
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "title": {
            "type": "string",
            "description": "Position/title"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "ssn": {
            "type": "string",
            "description": "SSN"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "iso_code": {
            "type": "string",
            "description": "Country ISO code"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "AccountHolder": {
        "type": "object",
        "required": ["first_name", "last_name", "email", "phone"],
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          }
        }
      },
      "Address": {
        "type": "object",
        "required": ["address1", "city", "state", "zip", "country"],
        "properties": {
          "address1": {
            "type": "string",
            "description": "Address line 1"
          },
          "address2": {
            "type": "string",
            "description": "Address line 2"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "zip": {
            "type": "string",
            "description": "ZIP code"
          },
          "country": {
            "type": "string",
            "description": "Country code"
          }
        }
      },
      "FormationResponse": {
        "type": "object",
        "required": ["success", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the request was successful"
          },
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "data": {
            "type": "object",
            "nullable": true,
            "description": "Response data for successful requests",
            "properties": {
              "formation_id": {
                "type": "string",
                "description": "Unique formation process ID"
              },
              "company_id": {
                "type": "string",
                "description": "Created company ID"
              },
              "status": {
                "type": "string",
                "description": "Formation status",
                "enum": ["shareholder_verification", "in_progress", "active", "refunded", "name_change", "signature_requested", "submitted_to_state", "cancelled"]
              },
              "external_id": {
                "type": "string",
                "description": "Partner's external ID for this formation"
              }
            }
          },
          "error": {
            "type": "object",
            "nullable": true,
            "description": "Error details for failed requests",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code",
                "enum": [
                  "API_KEY_REQUIRED", "INVALID_API_KEY", "ACCESS_DENIED", "RATE_LIMIT_EXCEEDED",
                  "INVALID_REQUEST", "VALIDATION_FAILED", "COMPANY_NOT_FOUND", "PACKAGE_NOT_FOUND",
                  "DUPLICATE_EXTERNAL_ID", "INTERNAL_ERROR"
                ]
              },
              "details": {
                "type": "string",
                "description": "Additional error details"
              }
            }
          }
        }
      },
      "FormationStatusResponse": {
        "type": "object",
        "required": ["success", "company_id", "company_name", "status"],
        "properties": {
          "success": { "type": "boolean", "description": "Indicates if the request was successful" },
          "company_id": { "type": "string", "description": "Company ID" },
          "company_name": { "type": "string", "description": "Company name" },
          "status": {
            "type": "string",
            "description": "Formation status",
            "enum": ["shareholder_verification", "in_progress", "active", "refunded", "name_change", "signature_requested", "submitted_to_state", "cancelled"]
          },
          "formation_date": { "type": "string", "description": "Company formation date", "nullable": true },
          "ein": { "type": "string", "description": "Employer Identification Number", "nullable": true },
          "external_id": { "type": "string", "description": "Partner's external ID", "nullable": true },
          "custom_data": { "type": "object", "description": "Partner's custom data for this company", "nullable": true },
          "type": {
            "type": "string",
            "description": "Company type",
            "enum": ["LLC", "C-CORP"],
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "State abbreviation",
            "enum": ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"],
            "nullable": true
          },
          "country": { "type": "string", "description": "Country code", "nullable": true },
          "ending": {
            "type": "string",
            "description": "Company ending",
            "enum": ["LLC", "Inc.", "Corporation", "Corp."],
            "nullable": true
          },
          "industry": { "type": "string", "description": "Industry type", "nullable": true },
          "number_of_shares": { "type": "number", "description": "Number of shares", "nullable": true },
          "par_value": { "type": "number", "description": "Par value per share", "nullable": true },
          "is_company_private": { "type": "boolean", "description": "Whether the company is private" },
          "address": { "$ref": "#/components/schemas/Address", "description": "Company address", "nullable": true },
          "timezone": { "type": "string", "description": "Company timezone", "nullable": true },
          "shareholders": {
            "type": "array",
            "description": "List of shareholders",
            "items": { "$ref": "#/components/schemas/ShareholderResponse" },
            "nullable": true
          },
          "directors": {
            "type": "array",
            "description": "List of directors (C-CORP only)",
            "items": { "$ref": "#/components/schemas/PersonResponse" },
            "nullable": true
          },
          "officers": {
            "type": "array",
            "description": "List of officers (C-CORP only)",
            "items": { "$ref": "#/components/schemas/PersonResponse" },
            "nullable": true
          },
          "created_at": { "type": "integer", "description": "Creation timestamp", "nullable": true },
          "updated_at": { "type": "integer", "description": "Last update timestamp", "nullable": true },
          "federal_tax_filing": { "type": "integer", "description": "Federal tax filing timestamp", "nullable": true },
          "state_tax_filing": { "type": "integer", "description": "State tax filing timestamp", "nullable": true },
          "foreign_qualification_addresses": {
            "type": "array",
            "description": "Foreign qualification addresses",
            "items": { "$ref": "#/components/schemas/Address" },
            "nullable": true
          }
        }
      },
      "ShareholderResponse": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "title": {
            "type": "string",
            "description": "Position/title"
          },
          "number_of_shares": {
            "type": "number",
            "description": "Number of shares"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "iso_code": {
            "type": "string",
            "description": "Country ISO code"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "is_director": {
            "type": "boolean",
            "description": "Whether shareholder is also a director"
          },
          "is_main_incorporator": {
            "type": "boolean",
            "description": "Whether shareholder is the main incorporator"
          },
          "type": {
            "type": "string",
            "enum": ["individual", "organization"],
            "description": "Shareholder type"
          },
          "legal_entity_name": {
            "type": "string",
            "description": "Legal entity name (for organization shareholders)"
          },
          "representative_name": {
            "type": "string",
            "description": "Representative name (for organization shareholders)"
          }
        }
      },
      "PersonResponse": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "title": {
            "type": "string",
            "description": "Position/title"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "iso_code": {
            "type": "string",
            "description": "Country ISO code"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "FormationErrorResponse": {
        "type": "object",
        "required": ["success", "message", "error"],
        "properties": {
          "success": { "type": "boolean", "description": "Indicates if the request was successful", "example": false },
          "message": { "type": "string", "description": "Error message" },
          "error": {
            "type": "object",
            "nullable": true,
            "description": "Error details for failed requests",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code",
                "enum": [
                  "API_KEY_REQUIRED", "INVALID_API_KEY", "ACCESS_DENIED", "RATE_LIMIT_EXCEEDED",
                  "INVALID_REQUEST", "VALIDATION_FAILED", "COMPANY_NOT_FOUND", "PACKAGE_NOT_FOUND",
                  "DUPLICATE_EXTERNAL_ID", "INTERNAL_ERROR"
                ]
              },
              "details": {
                "type": "string",
                "description": "Additional error details"
              }
            }
          }
        }
      },
      "BadRequestError": {
        "allOf": [
          { "$ref": "#/components/schemas/FormationErrorResponse" },
          {
            "type": "object",
            "example": {
              "success": false,
              "message": "Invalid request data",
              "error": {
                "code": "INVALID_REQUEST",
                "details": "Field 'name' is required"
              }
            }
          }
        ]
      },
      "UnauthorizedError": {
        "allOf": [
          { "$ref": "#/components/schemas/FormationErrorResponse" },
          {
            "type": "object",
            "example": {
              "success": false,
              "message": "API key is required",
              "error": {
                "code": "API_KEY_REQUIRED",
                "details": ""
              }
            }
          }
        ]
      },
      "ForbiddenError": {
        "allOf": [
          { "$ref": "#/components/schemas/FormationErrorResponse" },
          {
            "type": "object",
            "example": {
              "success": false,
              "message": "Access denied",
              "error": {
                "code": "ACCESS_DENIED",
                "details": ""
              }
            }
          }
        ]
      },
      "NotFoundError": {
        "allOf": [
          { "$ref": "#/components/schemas/FormationErrorResponse" },
          {
            "type": "object",
            "example": {
              "success": false,
              "message": "Company not found",
              "error": {
                "code": "COMPANY_NOT_FOUND",
                "details": ""
              }
            }
          }
        ]
      },
      "ConflictError": {
        "allOf": [
          { "$ref": "#/components/schemas/FormationErrorResponse" },
          {
            "type": "object",
            "example": {
              "success": false,
              "message": "External ID already exists for this partner",
              "error": {
                "code": "DUPLICATE_EXTERNAL_ID",
                "details": ""
              }
            }
          }
        ]
      },
      "RateLimitError": {
        "allOf": [
          { "$ref": "#/components/schemas/FormationErrorResponse" },
          {
            "type": "object",
            "example": {
              "success": false,
              "message": "Rate limit exceeded",
              "error": {
                "code": "RATE_LIMIT_EXCEEDED",
                "details": "Too many requests. Please try again later."
              }
            }
          }
        ]
      },
      "InternalServerError": {
        "allOf": [
          { "$ref": "#/components/schemas/FormationErrorResponse" },
          {
            "type": "object",
            "example": {
              "success": false,
              "message": "Internal server error",
              "error": {
                "code": "INTERNAL_ERROR",
                "details": "An unexpected error occurred."
              }
            }
          }
        ]
      }
    }
  },
  "x-rate-limits": {
    "formation_api": "Per API key rate limiting with per-company ID sub-limits for GET requests"
  },
  "x-authentication": {
    "formation_endpoints": "API Key via X-API-Key header or Bearer token"
  },
  "x-versioning": {
    "current_version": "2025-06-24",
    "version_header": "X-API-Version",
    "latest_version_header": "X-API-Latest-Version"
  }
} 